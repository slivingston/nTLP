TuLiP
=====

Installation
------------

In most cases, it suffices to

  python setup.py install

To avoid checking for dependencies and optional packages, add the
option "nocheck"::

  python setup.py install nocheck

Detailed instructions, including notes about dependencies and
troubleshooting, are available at

http://tulip-control.sourceforge.net/doc/install.html

The documentation sources (see below) can be found under doc/.
A test suite (see below) is provided under tests/.


Sphinx and Epydoc generated documentation
-----------------------------------------

There are two main sources of documentation outside the code.  The
"user" documentation is under doc/ and is built with `Sphinx
<http://sphinx.pocoo.org/>`_, so the usual steps apply, i.e. ::

  make html

Note that a Windows build file, make.bat, was auto-generated at the
time of first initialising the docs configuration files (ca. 2011 May
8) but is not actively maintained.  It is included for convenience;
please consider Makefile to be the ground truth.  A built copy for the
most recent release of TuLiP is available online at

http://tulip-control.sourceforge.net/doc/

The API documentation is generated with `Epydoc
<http://epydoc.sourceforge.net/>`_ and can also be built from the
``doc`` directory, now by ::

  make api


Format specifications
---------------------

The directory doc/formats/ contains definitions and documentation
about data and file formats used in the project.  The goal is to
formalize specifications expected in the code in a medium external to
it.  Some of this is done in docstrings, but formats/ should provide
single and normative points of reference.


Testing
-------

Tests are performed using nose; see http://readthedocs.org/docs/nose/
for details.  From the root of the source tree (i.e., where setup.py
is located), run::

  nosetests

To change default options, edit the "nosetests" section in setup.cfg.
To disable output capture, add the flag "-s" when invoking nose.
To run only one of the modules under the ``tests`` directory, give
that module's name when invoking nose.
