#!/usr/bin/env python
# Emacs, this is -*-Python-*-
"""
Generate a DOT (in Graphviz) file from tulipcon XML file.

Note this is basically a wrapper to ease use of the Automaton class
and its writeDotFile method from the command-line. Accepts a *.xml
filename and, optionally, a destination filename. If no destination is
given, default is to use input filename with new ending ".dot"

By default in each state node, variables taking the value zero are not
listed.  To disable this (i.e., do not hide any valuations), use the
flag "-z".

Also note that command-line arguments are handled manually, since they
are so simple...

Example: suppose you have robotctrl.xml from a TuLiP session. Then to
generate a corresponding DOT file and create a PNG image, try

$ xml2dot robotctrl.xml
$ dot -Tpng -O robotctrl.dot

Depending on your graphviz installation, the resulting image file may
be called robotctrl.dot.png
"""

import sys
from tulip.automaton import Automaton
from tulip.conxml import readXMLfile

if __name__ == "__main__":
    if len(sys.argv) < 2 or len(sys.argv) > 4:
        print "Usage: xml2dot.py [-z] INPUT.xml [OUTPUT.dot]"
        exit(1)

    # Detect and strip -z flag
    if "-z" in sys.argv:
        hidez_flag = False
        sys.argv.remove("-z")
    else:
        hidez_flag = True

    if len(sys.argv) == 3:
        destfile = sys.argv[2]
    else:
        if len(sys.argv[1]) < 4:  # Handle weirdly short names
            destfile = sys.argv[1] + ".dot"
        else:
            destfile = sys.argv[1][:-4] + ".dot"
    
    (prob, sys_dyn, aut) = readXMLfile(sys.argv[1])
    if not aut.writeDotFile(destfile, hideZeros=hidez_flag):
        print "Failed to create DOT file, " + destfile
        exit(-1)
